mnvruncontrol -- the MINERvA run control
===================================================
  Original author:  J. Wolcott  (jwolcott@fnal.gov)
  Last revision:    v5r4  (January 2011)
  Last update:      January 25, 2011
===================================================

This document briefly summarizes the changes from version to version
of the MINERvA run control software.  I didn't think to start it
until most of the way through v4, so it's a bit skimpy below there...

v5r4    - Added README.CONFIGURATION for how to use RunControlConfiguration.py.
        - Change to control transfer architecture: if client A currently has
          control and client B requests it, client A is given a configurable
          amount of time (defaults to 15 seconds) to confirm or veto this
          request via a pop-up window.  If client A does nothing before the
          timeout, control is automatically transferred to client B.
        - New "client manager" frontend application.  When connected to a DAQ
          manager, the client manager lists all currently connected clients,
          and can assign or revoke control to/from any of the clients.
          (These administrative actions require the entry of a password which
          is set in the DAQ manager's configuration.)
        - Fixed 'force reload hardware' button so that it actually works.
        - A handful of bugfixes (see Redmine).

v5r3    - PMT high voltage check no longer waits for user confirmation before
          starting the run; it just puts up the notice and continues.
        - The DST jobs started by the MonitorDispatcher can be turned on
          and off independently using the Configuration.
        - Wide-scale overhaul of Configuration parameter names & usage.
        - PMT HV thresholds & e-mail notification addresses can now be set
          using the RunControlConfiguration script.
        - Front-end now has an "about" box with some developer info &
          link to online documentation.
        - A few bugfixes (see Redmine).

v5r2    - Added front-panel control to force a hardware reload when
          the next run starts.
        - The MonitorDispatcher now can be configured to attempt to use
          a Condor queue to submit its non-'current' DST-making jobs.
          (Configuration available via frontend/RunControlConfiguration.py.)
        - By default the run control frontend now issues a warning to
          the user if no triggers have been reported within a configurable
          number of minutes of starting a run.  (This behavior can be
          turned off by setting the 'max trigger interval' to zero.)
        - The frontend/RunControlConfiguration.py script now has a text-only
          mode that is used by default when $DISPLAY is not set.
        - The RC frontend can now be configured not to use sound or 'blinking'
          for alerts by setting the 'bell' and 'blink interval' parameters
          to 0 within the Configuration.  (This allows the user to configure
          the frontend to not attempt to use sound on machines with no sound
          card.)

v5r1    - Moved rarely used frontend items "Detector type" and "Hardware init
          level" to Configuration.
        - Font sizes were increased universally in front end.
        - Updates to documentation (README, HACKING).
        - A few various bugfixes (see Redmine).

v5r0     (Beta version.)  Massive overhaul of run control system:
         - DataAcquisitionManager is now a SERVER process (a Dispatcher
           like the others).  Start the other Dispatchers on the
           appropriate nodes first.  It can run the DAQ with any number
           of frontend clients (including 0).  See next point.
         - Frontend CLIENTs now are run locally on the machine where
           they are to be used (instead of being X-forwarded via SSH).
         - A multitude of adjustments were made to the thread
           architecture, the configuration, and the event model to
           support this new design.  They are too numerous to detail
           here (see the CVS logs if you are really interested).

v4r15    Now expects any LI boxes to be attached to the readout nodes
         and gives them instructions accordingly.

v4r14    MonitorDispatcher now e-mails users specified in Configuration
         if a DST-making job fails.

v4r13    - Compatibility update for asynchronous DAQ (mnvdaq >= v7r5):
           * Readout dispatcher reports on sentinel frame status to main node.
           * Sends SIGTERM to event builder process if no sentinel coming.
           * Readout dispatcher now reads SAM file to get gate count
             (since event builder lags behind DAQ in asynchronous mode)
             and reports to main node for display.
         - PMT HV notification alert in main window is now dismissed
           automatically when user selects "continue" or "close" in pop-up
           window.
         - HW loading is now always initiated on the next run following a HW
           error, irrespective of whether the last run series and this one
           have the same configuration
. 
.
.
v4       Added MTest beamline DAQ dispatcher/node architecture.

v3       Now handles multi-node DAQ operations.

v2       Added remote node functionality via socket communcation.

v1       First working release of mnvruncontrol.  Single-node only.
