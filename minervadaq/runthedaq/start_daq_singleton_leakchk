#!/bin/bash

Help()
{
	echo  "Usage : start_daq_singleton_leakchk -et <ET filename (stub)> -f <Num FEBS (same as detector config)> -g <Num Gates>"
	echo  "          -m <Mode> -r <Run Num> -s <Sub Num> -t <n seconds (not supported)> -d <detector code (see DAQHeader class)>"
	echo  "          -cf <slow control config file> -ll <LED Level> -lg <LED Group (encoded, 8, 16, etc.))>"
	echo  "          -hw <vme card init. level, 0 no init, non-zero init> -p <port 1201-1250>"
}

if [ $# -eq 0 ]
then
	Help
	exit 1
fi

# Running Modes:
#  0 == OneShot
#  1 == NuMI
# See the DAQ code for more... 

FILEROOT=testme
NFEBS=4    # We also use this to fill the detector configuration field.
NGATES=10
RUNMODE=0
RUN=1337
SUB=391
NSECONDS=0  # NSECONDS is a dummy argument for the DAQ right now.
DETECTOR=0  # See Event/MinervaEvent/DAQHeader.xml for the detector codes.
CONFIGFILE=unknown # This is the filename for the config loaded by the slow control.
LEDLEVEL=0  # Defaults to zero PE.
LEDGROUP=8  # Defaults to LEDALL.
INITLEVEL=1 # Defaults to run INIT.  
DEBUG=''
PORT=1201

while [ $# -gt 0 ]
do
	case $1 in
		-et)	FILEROOT=$2
			shift 2 
           		;;
		-f)	NFEBS=$2
			shift 2
			;;
		-g)	NGATES=$2
			shift 2
			;;
		-m)	RUNMODE=$2
			shift 2
			;;
		-r)	RUN=$2
			shift 2
			;;
		-s)	SUB=$2
			shift 2
			;;
		-t)	NSECONDS=$2
			shift 2
			;;
		-d)	DETECTOR=$2
			shift 2
			;;
		-cf)	CONFIGFILE=$2
			shift 2
			;;
		-ll)	LEDLEVEL=$2
			shift 2
			;;
		-lg)	LEDGROUP=$2
			shift 2
			;;
		-hw)	INITLEVEL=$2
			shift 2
			;;
		-p)	PORT=$2
			shift 2
			;;
		-debug)	DEBUG='-hold'
			shift 1
			;;
	esac
done

ETSYS=/work/data/etsys/${FILEROOT}_RawData
OUTFL=/work/data/rawdata/${FILEROOT}_RawData.dat

xterm ${DEBUG} -hold -geometry 80x30+380+1 -sl 1000 -e ./start_et_system $ETSYS $NFEBS $NGATES $PORT &
export ET_SYST_TERM_PID=$!
echo ET_SYST_TERM_PID=${ET_SYST_TERM_PID}
echo $ET_SYST_TERM_PID > $ETSYSTERMPIDFILE
sleep 2s

xterm ${DEBUG} -hold -geometry 88x60+890+1 -sl 1000 -e ./start_et_monitor $ETSYS &
export ET_MON_TERM_PID=$!
echo ET_MON_TERM_PID=${ET_MON_TERM_PID}
echo $ET_MON_TERM_PID > $ETMONTERMPIDFILE
sleep 2s

xterm ${DEBUG} -hold -geometry 80x28+380+421 -sl 10000 -e ./start_eb_service $ETSYS $OUTFL $PORT &
export EB_SERV_TERM_PID=$!
echo EB_SERV_TERM_PID=${EB_SERV_TERM_PID}
echo $EB_SERV_TERM_PID > $EBSRVTERMPIDFILE
sleep 16s

# Note we do not pass the full path of the ET system to the daq.
# That information is attached within the process itself.
##valgrind -v --log-file-exactly=val_minervadaq.txt ${DAQROOT}/bin/minervadaq -et $FILEROOT -g $NGATES -m $RUNMODE -r $RUN -s $SUB -d $DETECTOR -t $NSECONDS -cf $CONFIGFILE -dc $NFEBS -ll $LEDLEVEL -lg $LEDGROUP -hw $INITLEVEL -p $PORT
${DAQROOT}/bin/minervadaq -et $FILEROOT -g $NGATES -m $RUNMODE -r $RUN -s $SUB -d $DETECTOR -t $NSECONDS -cf $CONFIGFILE -dc $NFEBS -ll $LEDLEVEL -lg $LEDGROUP -hw $INITLEVEL -p $PORT

