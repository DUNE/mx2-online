This file is current as of 2013.March.19 - GNP

How to update the hardware configuration files used by the run control during a run series.
-------------------------------------------------------------------------------------------

The Minerva DAQ has limited hardware (electronics) configuration capability.  By default 
(in terms of current best practice), the DAQ does configure the timing registers for all 
the VME cards in its configuration.  This means it sets the CROC's to external timing mode 
(so they get timing signals from the CRIM) and sets the CRIM's into a timing mode appropriate 
for the run, typically either internal for "one shot" pedestals and various "cosmic" running 
modes, and "MTM" (Minerva Timing Module) for NuMI operations (beam and LI).  LI at MTest is 
taken with the CRIM in the internal timing mode.

Instead, the majority of the electronics registers on the VME cards and FEB's are set in one 
of two ways: either with the Slow Control directly or with the Slow Control via the Run Control.  
The Minerva Run Control is capable of running series of "subruns" with a specific hardware 
configuration (we allow one configuration only for each subrun - varying the configuration from 
subrun to subrun within a series is disallowed, primarily for operational convenience).

When configuration is performed directly via the Slow Control, the method operators are encouraged 
to use is to load pre-configured files prepared by DAQ experts.  These files will be stored on 
local disk, typically either in one of two locations:
	1) The $HOME area for the online user account (typically either "mnvonline" or "tbonline").
	2) /work/conditions/MParamFiles/data/DAQ/hardware_config
Operators are generally encouraged to look in the $HOME area.  Experts will try to keep a limited 
number of clearly named files there for use.  (Here, /work/conditions could be replaced with a 
generic $CONDITIONSROOT area if the installation demands it.)

When configuration is performed via the Run Control, the configuration files are automatically 
loaded from the second area mentioned directly above.  Actually, technically, the name and path 
of the file for three generic settings (beam, light injection, and light injection with 
discriminators) is set within the Run Control Configuration (RCC).  The RCC is available via a 
GUI in the Run Control package, typically installed in:
	/work/software/mnvruncontrol/frontend/RunControlConfiguration.py
Operators should in general not use this, but rather let experts manage it.

The best practice method of updating hardware configurations is to use CVS.  The sequence of 
actions looks like this:

1) An expert should check to see where the hardware configuration files are being loaded from.  
The defaults are the following:
	/work/conditions/MParamFiles/data/DAQ/hardware_config/beam.hwcfg
	/work/conditions/MParamFiles/data/DAQ/hardware_config/li.hwcfg
	/work/conditions/MParamFiles/data/DAQ/hardware_config/li_with_discriminators.hwcfg

2) The files should have symbolic links to files kept in CVS.  For example, on the main detector:
mnvonline0.fnal.gov> ll /work/conditions/MParamFiles/data/DAQ/hardware_config/
total 13M
lrwxrwxrwx 1 mnvonline e938    50 May 18 16:41 beam.hwcfg -> 
                                          fullDetectorVeto_beamSettings_TunedHV_Crate0.hwcfg
drwxr-xr-x 2 mnvonline e938  4.0K May 18 16:40 CVS/
...
-rw-r--r-- 1 mnvonline e938  297K May 18 15:06 fullDetectorVeto_beamSettings_TunedHV_Crate0.hwcfg

3) The two ways to produce an update are the following: either a DAQ expert should build a 
new file using the Slow Control and save it to:
	/work/conditions/MParamFiles/data/DAQ/hardware_config
This is our CVS area (the package is MParamFiles).  Or, alternatively, a gain expert might build 
a new file by checking the existing file out CVS and running code to update the voltage settings.  
The new file is committed back into CVS.

4) Commit the new file to CVS.
	cvs add the_new_config_file_for_beam.hwcfg
	cvs commit the_new_config_file_for_beam.hwcfg
(Or simply commit the prior file name if it was updated instead of replaced.)  If the file was 
produced by a gain expert, it is instead checked out of CVS at this point.

5) Make symbolic links to the new file.  For example:
	ln -sf the_new_config_file_for_beam.hwcfg beam.hwcfg
	
With these steps done, the Run Control will automatically load the correct configuration file 
(or, at least it will load the file specified by the run series).

Note, when updating the configuration file, it is important to take care.  A simple bit-shift in 
the message sent to the FEB's to configure the FPGA's could introduce settings that could do 
catastrophic harm!  Please check with experts carefully before loading a new file!
	
