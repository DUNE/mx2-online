This file is current as of 2013.March.19 - GNP

How to update the hardware configuration for Minerva DAQ.
---------------------------------------------------------
The Minerva DAQ does not perform dynamic hardware lookup, nor does it load 
configurations from user editable text files.  Instead, the hardware is coded 
into the DAQ and selected via pre-compiler commands.  The configuration is 
kept in the DAQ's workers library.

To update the configuration, take the following steps:

1) Log on to the DAQ machine you want to update as the "mnvonline" user.  On 
T977 machines, use the "tbonline" account instead.  In the $HOME are there 
will be a set of scripts for launching the Run and Slow Controls, configuring 
the environment, etc.  These scripts will vary from machine to machine, but 
they are hopefully titled in a useful way.  The primary distinction to be 
aware of is between single and mulit-machine DAQ builds.  For most production 
machines, that choice is hidden, but the user should pay attention to the 
setup scripts just in case.

2) Source the setup script to set the DAQ environment variables.  On E938 
machines, the script is likely named "setupdaqenv.sh."  On T977 machines, 
it will likely be named "singledaqenv.sh."

Example:
~> ssh tbonline@mnvtbonline0.fnal.gov
mnvtbonline0.fnal.gov> . singledaqenv.sh 

3) Change directories to the $DAQROOT.

Example:

mnvtbonline0.fnal.gov> cd $DAQROOT 
mnvtbonline0.fnal.gov> pwd
/work/software/mnvsingle/mnvdaq

4) The file we need to edit is in the workers package.  Open 
  $DAQROOT/workers/src/DAQWorker.cpp.

5) The hardware definitions are in the DAQWorker::InitializeHardware() function.  
Find the function.

Example:
  daqWorker.infoStream() << "Initializing Hardware for DAQWorker...";

  // Read in hardware config here. For now, hard code...

  readoutWorker->AddCrate(0);
  readoutWorker->GetVMECrateVector(0)->AddECROC( 2, 0, 5, 0, 0 );
  readoutWorker->GetVMECrateVector(0)->AddCRIM( 224 );
  readoutWorker->InitializeCrates( args->runMode );

6) Edit the section.  The relevant functions are AddECROC and AddCRIM.
	AddCRIM(Address);
	AddECROC(Address, # of FEB's on Chain 0, # of FEB's on Chain 1, 
    # of FEB's on Chain 2, # of FEB's on Chain 3);

There are 8 dip switches on the VME cards (CROC's and CRIM's) that can be used 
to set an address from 1 to 255 (or 0x01 to 0xFF).  

7) Once the file is set, go to the $DAQROOT directory and build.

Example:
mnvtbonline0.fnal.gov> cd $DAQROOT 
mnvtbonline0.fnal.gov> gmake relink

8) If the build succeeded, you should see the following in the $DAQROOT/lib 
and $DAQROOT/bin directories:

perdue@minervatest04> ll lib/ bin/
bin/:
total 392K
-rwxrwxr-x 1 perdue e938  33K Mar 19 16:52 event_builder*
-rwxrwxr-x 1 perdue e938 105K Mar 19 16:52 minervadaq*
-rwxrwxr-x 1 perdue e938 237K Mar 19 16:52 tests*

lib/:
total 304K
-rwxrwxr-x 1 perdue e938  25K Mar 19 16:52 libevent_structure.so*
-rwxrwxr-x 1 perdue e938 181K Mar 19 16:52 libhardware.so*
-rwxrwxr-x 1 perdue e938  84K Mar 19 16:52 libminerva_workers.so*




